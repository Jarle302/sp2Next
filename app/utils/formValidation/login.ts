//  isInputValid and isValidUrl are both generated by AI

function isInputValid(input: string) {
  const invalidCharacters = /[^a-zA-Z_]/;
  return invalidCharacters.test(input);
}

function isValidUrl(url: string) {
  const urlPattern = new RegExp(
    "^(https?:\\/\\/)?" + // protocol
      "((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|" + // domain name and extension
      "((\\d{1,3}\\.){3}\\d{1,3}))" + // OR ip (v4) address
      "(\\:\\d+)?" + // port
      "(\\/[-a-z\\d%_.~+]*)*" + // path
      "(\\?[;&amp;a-z\\d%_.~+=-]*)?" + // query string
      "(\\#[-a-z\\d_]*)?$",
    "i"
  ); // fragment locator
  return !!urlPattern.test(url);
}

export default function validateLoginRegister({
  email,
  password,
  name,
  avatar,
}: {
  email: string;
  password: string;
  name?: string;
  avatar?: string;
}) {
  const errors = { email: "", password: "", name: "", avatar: "" };
  if (
    email.split("@")[1] !== "stud.noroff.no" ||
    email.split("@")[0].length < 1
  ) {
    errors.email = "A valid email including @stud.noroff.no is required";
  }
  if (password.trim().length < 8) {
    errors.password = "Password must be at least 8 characters long";
  } else errors.password = "";
  if (name) {
    if (isInputValid(name)) {
      errors.name = "Please use only letters and _ in your name";
    } else errors.name = "";
  }
  if (avatar) {
    if (!isValidUrl(avatar)) {
      errors.avatar =
        "Please enter a valid url,Note adding a picture is optional";
    }
  }
  console.log(errors);
  return errors;
}
